/******************************************************************************
* File Name:   e_eeprom_xmc4.h
*
* Description: Header file for emulated EEPROM implementation in XMC4000 MCUs.
* It contains the necessary macro and structure definitions to use configure 
* flash memory as emulated EEPROM.
*
* Related Document: See README.md
*
******************************************************************************
*
* Copyright (c) 2015-2021, Infineon Technologies AG
* All rights reserved.                        
*                                             
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*
* Change History
* --------------
*
* 2016-01-20
*     - Initial version
*
* 2016-02-05
*     - XMC_LIB (LLD) version check corrected in header file
*
* 2016-07-08:
*     - Fixed incorrect case for an included header.<br>
*
* 2017-02-16:
*     - E_EEPROM_XMC4_WriteByte() and E_EEPROM_XMC4_WriteArray() returns a
*     boolean indicating if changes were detected since the last write to
*     the same area <BR>
*****************************************************************************/

#ifndef E_EEPROM_XMC4_H
#define E_EEPROM_XMC4_H

/****************************************************************************
 * HEADER FILES
 ***************************************************************************/

#include "xmc_flash.h"
#include "xmc_fce.h"

/****************************************************************************
 * MACROS
****************************************************************************/

/****************************************************************************
* ENUMS
****************************************************************************/
/** Defines the error codes for E_EEPROM_XMC4 application. */
typedef enum E_EEPROM_XMC4_STATUS
{
  E_EEPROM_XMC4_STATUS_OK                 = 0U, /**< Successful completion of initialization */
  E_EEPROM_XMC4_STATUS_ERROR_OLD_DATA     = 1U, /**< Initialization succeeded with old data block. Latest has been found
                                                     corrupted or half programmed in previous power down cycle write. */
  E_EEPROM_XMC4_STATUS_READ_ERROR         = 2U, /**< Initialization failed due to read error */
  E_EEPROM_XMC4_STATUS_WRITE_ERROR        = 3U, /**< Initialization failed due to write error */
  E_EEPROM_XMC4_STATUS_ERASE_ERROR        = 4U, /**< Initialization failed due to erase error */
  E_EEPROM_XMC4_STATUS_ERROR_PARAM        = 5
} E_EEPROM_XMC4_STATUS_t;

/****************************************************************************
* DATA STRUCTURES
****************************************************************************/
typedef struct E_EEPROM_XMC4
{
  bool initialized;                           /**< Initialization status */
} E_EEPROM_XMC4_t;

/****************************************************************************
 * API Prototypes
 ***************************************************************************/
#ifdef __cplusplus
extern "C"  {
#endif
 
 E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_Init(E_EEPROM_XMC4_t *const handle,  uint32_t len);
 
 bool E_EEPROM_XMC4_WriteByte(const uint16_t offset_address, const uint8_t value);

 bool E_EEPROM_XMC4_WriteArray(const uint16_t offset_address, const uint8_t *const data, const uint16_t length);

 void E_EEPROM_XMC4_ReadByte(const uint16_t offset_address, uint8_t *const value);

 void E_EEPROM_XMC4_ReadArray(const uint16_t offset_address, uint8_t *const data, const uint16_t length);

 E_EEPROM_XMC4_STATUS_t E_EEPROM_XMC4_UpdateFlashContents(void);

 bool E_EEPROM_XMC4_IsFlashEmpty(void);

#ifdef __cplusplus
}
#endif

#endif /* E_EEPROM_XMC4_H */

